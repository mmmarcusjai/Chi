{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/marcuschan/Documents/Dev/chi/components/navbar.js\";\n\nimport React from \"react\";\n\nvar debounce = function debounce(func, wait) {\n  var timeout;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      return func.apply(_this, args);\n    }, wait);\n  };\n};\n\nvar NavMenu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NavMenu, _React$Component);\n\n  function NavMenu(props) {\n    var _this2;\n\n    _classCallCheck(this, NavMenu);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(NavMenu).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this2), \"handleScroll\", function () {\n      // + is unary operator, same as Number(window.scrollY)\n      var scrollPositionY = +window.scrollY;\n      return _this2.setState({\n        scrollPositionY: scrollPositionY\n      });\n    });\n\n    _this2.state = {\n      scrollPositionY: 0\n    };\n    return _this2;\n  }\n\n  _createClass(NavMenu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // 32 is the number of milliseconds to debounce\n      // I picked this because it's approx 1 frame (ie: 16.7ms)\n      // You'll want to modulate that to your taste.\n      // Add console.logs in handleScroll function to check if its flooding.\n      return window.addEventListener('scroll', debounce(this.handleScroll, 16));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      return window.removeEventListener('scroll', debounce(this.handleScroll, 16));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"nav\", {\n        className: \"chi-nav navbar fixed-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"brand-logo navbar-brand text-uppercase\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"/static/logo.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return NavMenu;\n}(React.Component);\n\nexport default NavMenu;","map":{"version":3,"sources":["/Users/marcuschan/Documents/Dev/chi/components/navbar.js"],"names":["debounce","func","wait","timeout","args","clearTimeout","setTimeout","apply","NavMenu","props","scrollPositionY","window","scrollY","setState","state","addEventListener","handleScroll","removeEventListener","React","Component"],"mappings":";;;;;;;;;;;;;AAAA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAOC,IAAP,EAAgB;AAC7B,MAAIC,OAAJ;AACA,SAAO,YAAa;AAAA,sCAATC,IAAS;AAATA,MAAAA,IAAS;AAAA;;AAChBC,IAAAA,YAAY,CAACF,OAAD,CAAZ;AACAA,IAAAA,OAAO,GAAGG,UAAU,CAAC;AAAA,aAAML,IAAI,CAACM,KAAL,CAAW,KAAX,EAAiBH,IAAjB,CAAN;AAAA,KAAD,EAA+BF,IAA/B,CAApB;AACH,GAHD;AAIH,CAND;;IASMM,O;;;;;AACF,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACnB,kFAAMA,KAAN;;AADmB,oEAmBJ,YAAM;AACjB;AACA,UAAMC,eAAe,GAAG,CAACC,MAAM,CAACC,OAAhC;AACA,aAAO,OAAKC,QAAL,CAAc;AAAEH,QAAAA,eAAe,EAAfA;AAAF,OAAd,CAAP;AACH,KAvBkB;;AAEf,WAAKI,KAAL,GAAa;AACTJ,MAAAA,eAAe,EAAE;AADR,KAAb;AAFe;AAKlB;;;;wCAEmB;AAChB;AACA;AACA;AACA;AACA,aAAOC,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkCf,QAAQ,CAAC,KAAKgB,YAAN,EAAoB,EAApB,CAA1C,CAAP;AACH;;;2CAEsB;AACnB,aAAOL,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCjB,QAAQ,CAAC,KAAKgB,YAAN,EAAoB,EAApB,CAA7C,CAAP;AACH;;;6BAOQ;AACL,aACI;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwD;AAAK,QAAA,GAAG,EAAC,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxD,CADJ,CADJ;AAKH;;;;EA/BkBE,KAAK,CAACC,S;;AAkC7B,eAAeX,OAAf","sourcesContent":["const debounce = (func, wait) => {\n    let timeout\n    return (...args) => {\n        clearTimeout(timeout)\n        timeout = setTimeout(() => func.apply(this, args), wait)\n    }\n}\n\n\nclass NavMenu  extends React.Component {\n    constructor(props) {\n    super(props)\n        this.state = {\n            scrollPositionY: 0,\n        }\n    }\n\n    componentDidMount() {\n        // 32 is the number of milliseconds to debounce\n        // I picked this because it's approx 1 frame (ie: 16.7ms)\n        // You'll want to modulate that to your taste.\n        // Add console.logs in handleScroll function to check if its flooding.\n        return window.addEventListener('scroll', debounce(this.handleScroll, 16))\n    }\n\n    componentWillUnmount() {\n        return window.removeEventListener('scroll', debounce(this.handleScroll, 16))\n    }\n\n    handleScroll = () => {\n        // + is unary operator, same as Number(window.scrollY)\n        const scrollPositionY = +window.scrollY\n        return this.setState({ scrollPositionY })\n    }\n    render() {\n        return (\n            <nav className=\"chi-nav navbar fixed-top\">\n                <div className=\"brand-logo navbar-brand text-uppercase\"><img src=\"/static/logo.png\"></img></div>\n            </nav>\n        )\n    }\n}\n\nexport default NavMenu"]},"metadata":{},"sourceType":"module"}